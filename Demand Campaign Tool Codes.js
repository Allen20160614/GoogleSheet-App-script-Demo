

var errmsg=''

function onOpen(e) {
  //Create Menu
  ui= SpreadsheetApp.getUi()
  .createMenu('Management API Menu')
  .addItem('Show SideBar','showSidebar')
  .addSeparator()
  .addItem('Generate Token','setTimeLoop')
  .addItem('Find Duplicate','findDuplicate')
  .addItem('Run Bid Operation','bidOperationRun')
  .addItem('Run Budget Operation','budgetOperationRun')
  .addSeparator()
  .addItem('Create a new Bid Sheet','createBidSheet')
  .addItem('Create a new Budget Sheet','createBudgetSheet')
  .addToUi();
}

// TODO: Clear data via a button click
function clearData() {
   SpreadsheetApp.getActiveSpreadsheet().getActiveSheet().getRange(7,1,1000,9).clear()
}

function showSidebar() {
  const template = HtmlService.createTemplateFromFile('Dashboard.html')
  const html=template.evaluate();
  html.setTitle('Tool Dashboard');
  ui= SpreadsheetApp.getUi().showSidebar(html); //Only width 300 pixel  
}



function createBidSheet(){
  showCreateSheetDialog(true)
}

function createBudgetSheet(){
  showCreateSheetDialog(false)
}

 function showCreateSheetDialog(isBidSheet){
     var isBidSheetStr=''
    if(isBidSheet){
       isBidSheetStr='Bid'
    }else{
       isBidSheetStr='Budget'
    }
   
    var ui = SpreadsheetApp.getUi(); // Same variations.
    var result = ui.prompt(
    "Let\'s create a new "+isBidSheetStr+"Sheet!",
    'Please enter your account_name:',
    ui.ButtonSet.OK_CANCEL);

  // Process the user's response.
  var button = result.getSelectedButton();
  var text = result.getResponseText();
  if (button == ui.Button.OK) {
    // User clicked "OK".
    if(isBidSheet){
      drawBidSheet(text)
    }else{
      drawBudgetSheet(text)
    }
  }

  }
  function showDuplicateDialog(isDuplicate){
    if(isDuplicate){
    var ui = SpreadsheetApp.getUi(); // Same variations.
    var result = ui.alert(
    "There are some duplicate elements",
    ui.ButtonSet.OK);
    }else{
    var ui = SpreadsheetApp.getUi(); // Same variations.
    var result = ui.alert(
    "There is No duplicate elements",
    ui.ButtonSet.OK);
    }
  }

  /**
   * Create Bid worksheet
   */
   function drawBidSheet(sheetname){
  var spreadSheet = SpreadsheetApp.getActiveSpreadsheet()
  spreadSheet.insertSheet("Update/Delete Bid "+sheetname)
  //Create UI for sheet1
  var sheet1=spreadSheet.getSheetByName("Update/Delete Bid "+sheetname);
  sheet1.setColumnWidth(1,250)
  sheet1.setColumnWidth(2,250)
  sheet1.setColumnWidth(3,250)
  sheet1.setColumnWidth(4,250)
  sheet1.setColumnWidth(5,250)
  sheet1.setColumnWidth(8,250)
  sheet1.setColumnWidth(9,300)
  sheet1.getRange("A1").setValue("Step 1. Please enter your secret key and refresh token below and click the Generate Token item under the Management API Menu or sidebar").setFontSize(14).setHorizontalAlignment("left").setVerticalAlignment("middle").setWrapStrategy(SpreadsheetApp.WrapStrategy.OVERFLOW)
  sheet1.getRange("A5").setValue("Step 2. Please copy your data as the formate below and click the Run Bid Operation under the Management API Menu or sidebar").setFontSize(14).setHorizontalAlignment("left").setVerticalAlignment("middle").setWrapStrategy(SpreadsheetApp.WrapStrategy.OVERFLOW)
  sheet1.getRange("A2:B4").setBorder(true, true, true, true, true, true, "black", SpreadsheetApp.BorderStyle.SOLID_MEDIUM)
  sheet1.getRange("C2:D2").setBorder(true, true, true, true, true, true, "black", SpreadsheetApp.BorderStyle.SOLID_MEDIUM).setBackgroundRGB(255,215,0)
  sheet1.getRange("A2").setValue("secret key").setHorizontalAlignment("center").setVerticalAlignment("middle")
  sheet1.getRange("C2").setValue("account name").setHorizontalAlignment("center").setVerticalAlignment("middle").setWrapStrategy(SpreadsheetApp.WrapStrategy.WRAP).setHorizontalAlignment("center")
  sheet1.getRange("D2").setValue(sheetname).setHorizontalAlignment("center").setVerticalAlignment("middle").setWrapStrategy(SpreadsheetApp.WrapStrategy.WRAP)
  sheet1.getRange("A3").setValue("refresh token").setHorizontalAlignment("center").setVerticalAlignment("middle").setWrapStrategy(SpreadsheetApp.WrapStrategy.WRAP)
  sheet1.getRange("A4").setValue("Bearer Token").setHorizontalAlignment("center").setVerticalAlignment("middle").setWrapStrategy(SpreadsheetApp.WrapStrategy.WRAP)
  sheet1.getRange("B2").setHorizontalAlignment("center").setVerticalAlignment("middle").setNote("Please input the secret key here")
  sheet1.getRange("B3").setHorizontalAlignment("center").setVerticalAlignment("middle").setNote("Please input your refresh token here").setWrapStrategy(SpreadsheetApp.WrapStrategy.CLIP)
  sheet1.getRange("B4").setHorizontalAlignment("center").setVerticalAlignment("middle").setNote("DONOT EDIT HERE!!      This filed will be generated by clicking the Generate Token item under Management API Menu").setWrapStrategy(SpreadsheetApp.WrapStrategy.CLIP)
  sheet1.getRange("A6").setBorder(true, true, true, true, true, true, "black", SpreadsheetApp.BorderStyle.SOLID_MEDIUM).setHorizontalAlignment("center").setVerticalAlignment("middle").setValue("Bearer Token").setse
  sheet1.getRange("A6:I6").setBorder(true, true, true, true, true, true, "black", SpreadsheetApp.BorderStyle.SOLID_MEDIUM).setWrapStrategy(SpreadsheetApp.WrapStrategy.WRAP).setBackgroundRGB(60,41,104).setFontColor("#ffffff")
  var initValuesArray=[["app_name","app_id","campaign_id(Required)","pub_name","pub_app_id(Required)","geo(Required)","rate(Required)","update_or_delete(Required)","status"]]
  sheet1.getRange("A6:I6").setBorder(true, true, true, true, true, true, "black", SpreadsheetApp.BorderStyle.SOLID).setWrapStrategy(SpreadsheetApp.WrapStrategy.WRAP).setValues(initValuesArray).setHorizontalAlignment("center").setVerticalAlignment("middle");
}


 /**
   * Create Budget worksheet
   */


 
   function drawBudgetSheet(sheetname){
  //Create2 sheets
  var spreadSheet = SpreadsheetApp.getActiveSpreadsheet()
  spreadSheet.insertSheet("Update Budget  "+sheetname)
  //Create UI for sheet2
  var sheet2=spreadSheet.getSheetByName("Update Budget  "+sheetname);
  //Create UI for sheet1
  sheet2.setColumnWidth(1,250)
  sheet2.setColumnWidth(2,250)
  sheet2.setColumnWidth(3,250)
  sheet2.setColumnWidth(4,250)
  sheet2.setColumnWidth(7,250)
  sheet2.setColumnWidth(8,250)
  sheet2.getRange("A1").setValue("Step 1. Please enter your secret key and refresh token below and click the Generate Token item under the Management API Menu or sidebar").setFontSize(14).setHorizontalAlignment("left").setVerticalAlignment("middle").setWrapStrategy(SpreadsheetApp.WrapStrategy.OVERFLOW)
  sheet2.getRange("A5").setValue("Step 2. Please copy your data as the formate below and click the Run Bid Operation under the Management API Menu or sidebar").setFontSize(14).setHorizontalAlignment("left").setVerticalAlignment("middle").setWrapStrategy(SpreadsheetApp.WrapStrategy.OVERFLOW)
  sheet2.getRange("A2:B4").setBorder(true, true, true, true, true, true, "black", SpreadsheetApp.BorderStyle.SOLID_MEDIUM)
  sheet2.getRange("A2").setValue("secret key").setHorizontalAlignment("center").setVerticalAlignment("middle")
  sheet2.getRange("C2:D2").setBorder(true, true, true, true, true, true, "black", SpreadsheetApp.BorderStyle.SOLID_MEDIUM).setBackgroundRGB(255,215,0)
  sheet2.getRange("C2").setValue("account name").setHorizontalAlignment("center").setVerticalAlignment("middle").setWrapStrategy(SpreadsheetApp.WrapStrategy.WRAP).setHorizontalAlignment("center")
  sheet2.getRange("C2").setValue("account name").setHorizontalAlignment("center").setVerticalAlignment("middle").setWrapStrategy(SpreadsheetApp.WrapStrategy.WRAP)
  sheet2.getRange("D2").setValue(sheetname).setHorizontalAlignment("center").setVerticalAlignment("middle").setWrapStrategy(SpreadsheetApp.WrapStrategy.WRAP)
  sheet2.getRange("A3").setValue("refresh token").setHorizontalAlignment("center").setVerticalAlignment("middle").setWrapStrategy(SpreadsheetApp.WrapStrategy.WRAP)
  sheet2.getRange("A4").setValue("Bearer Token").setHorizontalAlignment("center").setVerticalAlignment("middle").setWrapStrategy(SpreadsheetApp.WrapStrategy.WRAP)
 sheet2.getRange("B2").setHorizontalAlignment("center").setVerticalAlignment("middle").setNote("Please input the secret key here").setWrapStrategy(SpreadsheetApp.WrapStrategy.WRAP)
  sheet2.getRange("B3").setHorizontalAlignment("center").setVerticalAlignment("middle").setNote("Please input your refresh token here").setWrapStrategy(SpreadsheetApp.WrapStrategy.WRAP).setWrapStrategy(SpreadsheetApp.WrapStrategy.CLIP)
  sheet2.getRange("B4").setHorizontalAlignment("center").setVerticalAlignment("middle").setNote("DONOT EDIT HERE!!      This filed will be generated by clicking the Generate Token item under Management API Menu").setWrapStrategy(SpreadsheetApp.WrapStrategy.WRAP).setWrapStrategy(SpreadsheetApp.WrapStrategy.CLIP)
  sheet2.getRange("A6").setBorder(true, true, true, true, true, true, "black", SpreadsheetApp.BorderStyle.SOLID_MEDIUM).setHorizontalAlignment("center").setVerticalAlignment("middle").setValue("Bearer Token")
  sheet2.getRange("A6:H6").setBorder(true, true, true, true, true, true, "black", SpreadsheetApp.BorderStyle.SOLID_MEDIUM).setWrapStrategy(SpreadsheetApp.WrapStrategy.WRAP).setBackgroundRGB(60,41,104).setFontColor("#ffffff")
var initValuesArray=[["app_name","app_id","campaign_id(required)","campaign_bid(required)","daily_budget(required)","total_budget(required)","Campaign_bid_type (only 'install' is allowed)","status"]]
  sheet2.getRange("A6:H6").setBorder(true, true, true, true, true, true, "black", SpreadsheetApp.BorderStyle.SOLID).setWrapStrategy(SpreadsheetApp.WrapStrategy.WRAP).setValues(initValuesArray).setHorizontalAlignment("center").setVerticalAlignment("middle")
}




  /**
   * API method
   */
function getTokenThroughAPI(sceretKey,refreshToken) {
  const endPoint = "https://manage-ext.api.vungle.com/generate"
  const headers = {
    'secret-key' : sceretKey,
    'refresh-token' : refreshToken
  }
   getFunc(endPoint,headers)
}

function UpdateInsertBidThroughAPI(i,campaignId,data,bearerToken) {
  const endPoint = "https://manage-ext.api.vungle.com/campaigns/"+campaignId+"/multibidding"
  postFunc(i,endPoint,data,bearerToken)
  console.log(" method :UpdateInsertBidThroughAPI   endPoint :::::"+endPoint)
}


 function DeleteBidThroughAPI(i,campaignId,data,bearerToken) {
  const endPoint = "https://manage-ext.api.vungle.com/campaigns/"+campaignId+"/multibidding"
  DeleteFunc(i,endPoint,data,bearerToken) 
  console.log(" method :DeleteBidThroughAPI   endPoint :::::"+endPoint)
}

function  SetBudgetThroughAPI(i,campaignId,data,bearerToken) {
  const endPoint = "https://manage-ext.api.vungle.com/campaigns/"+campaignId+"/budget"
    PutFunc(i,endPoint,data,bearerToken)
  console.log(" method :SetBudgetThroughAPI   endPoint  endend :::::"+endPoint)
}

//GET 
const getFunc =  (url,headers) => {
  var activeSheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  const options = {
    'method' : 'get',
    'headers' : headers,
    'muteHttpExceptions': true
  }

      const res =  UrlFetchApp.fetch(url,options)
      var responseCode = res.getResponseCode()
      if (responseCode === 200) {
        const resJson = JSON.parse(res.getContentText());
         var bearerToken=resJson["token"];
            Logger.log('method-getFunc bearerToken: '+bearerToken);
         if(bearerToken==""||bearerToken==null){
            activeSheet.getRange("B4").setValue("secretkey or refreshtoken is wrong").setBackgroundRGB(255,215,0).setHorizontalAlignment("center").setVerticalAlignment("middle")
         }else{
            activeSheet.getRange("B4").setValue(bearerToken).setBackgroundRGB(20,205,200).setHorizontalAlignment("left").setVerticalAlignment("center")
         }
         
     }else{
        activeSheet.getRange("B4").setValue("token is invalid").setBackgroundRGB(20,205,200)
    // if it run unsuccefully,should cancel timeTrigger
        var triggers = ScriptApp.getProjectTriggers();
        for (var i = 0; i < triggers.length; i++) {
        ScriptApp.deleteTrigger(triggers[i]);

     }
  }
}

/**
 * Post
 */
const postFunc =  (i,url,data,bearerToken) => {
	const headers = {
    'vungle-version': 1,
    'Content-Type': 'application/json',
    'Authorization': 'Bearer '+ bearerToken
  }
  const options = {
    'method' : 'post',
    'Content-Type': 'application/json',
    'headers' : headers,
    'payload' : data,
    'muteHttpExceptions': true
  }
      const res =  UrlFetchApp.fetch(url,options)
      var responseCode = res.getResponseCode()
       Logger.log('method-postFunc set responseCode: '+responseCode);
       Logger.log('method-postFunc set responseContext: '+res.getContentText());
       var obj=JSON.parse(res.getContentText())
        printKeys(obj)

      if (responseCode === 200) {
        var activeSheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
        activeSheet.getRange(i,9).setBackgroundRGB(20,205,200)
        activeSheet.getRange(i,9).setValue("success")
     }else{
        var activeSheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
        var obj=JSON.parse(res.getContentText())
         printKeys(obj)
         if(errmsg=="token is invalid"){
          activeSheet.getRange("B4").setValue(errmsg).setBackgroundRGB(255,215,0)   
         }
         activeSheet.getRange(i,9).setBackgroundRGB(255,215,0).setValue(errmsg)
         errmsg=''
        Logger.log('method-UpdateInsertBid printValues   outside : '+errmsg);
        Logger.log('method-UpdateInsertBid printValues outside : '+errmsg);     
     }
}

/**
 * Delete
 */
const DeleteFunc = async (i,url,data,bearerToken) => {

   
	const headers = {
    'vungle-version': 1,
    'Content-Type': 'application/json',
    'Authorization': 'Bearer '+ bearerToken
  }
  const options = {
    'method' : 'delete',
    'Content-Type': 'application/json',
    'headers' : headers,
    'payload' : data,
    'muteHttpExceptions': true
  }
      const res =  UrlFetchApp.fetch(url,options)
      var responseCode = res.getResponseCode()
       var obj=JSON.parse(res.getContentText())
        printKeys(obj)
      Logger.log('method-DeleteFunc set responseCode: '+responseCode);
      Logger.log('method-DeleteFunc set responseContext: '+res.getContentText());
      if (responseCode === 200) {
        var activeSheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
        activeSheet.getRange(i,9).setBackgroundRGB(20,205,200)
        activeSheet.getRange(i,9).setValue("success") 
     }else{
        var activeSheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
        var obj=JSON.parse(res.getContentText())
         printKeys(obj)
         if(errmsg=="token is invalid"){
          activeSheet.getRange("B4").setValue(errmsg).setBackgroundRGB(255,215,0)   
         }
         activeSheet.getRange(i,9).setBackgroundRGB(255,215,0).setValue(errmsg)
         errmsg=''
        Logger.log('method-UpdateInsertBid printValues   outside : '+errmsg);
     }
  }


/**
 * Put
 */
   const  PutFunc =   (i,url,data,bearerToken) => {
 
	const headers = {
    'vungle-version': 1,
    'Content-Type': 'application/json',
    'Authorization': 'Bearer '+ bearerToken
  }
  const options = {
    'method' : 'put',
    'Content-Type': 'application/json',
    'headers' : headers,
    'payload' : data,
    'muteHttpExceptions': true

  } 
      const res =   UrlFetchApp.fetch(url,options)
      var responseCode = res.getResponseCode()
       Logger.log('method-PutFunc PutFunc PutFunc: '+res.getContentText());
      if (responseCode === 200) {
        var activeSheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
        activeSheet.getRange(i,8).setBackgroundRGB(20,205,200)
        activeSheet.getRange(i,8).setValue("success")
     }else{
        var activeSheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
        var obj=JSON.parse(res.getContentText())
        if(obj.message!=null){
          activeSheet.getRange("B4").setValue("token is invalid").setBackgroundRGB(255,215,0)
          activeSheet.getRange(i,8).setBackgroundRGB(255,215,0).setValue("token is invalid") 
        }else if(obj.messages!=null){
          activeSheet.getRange(i,8).setBackgroundRGB(255,215,0).setValue(obj.messages) 
        }
          
         Logger.log('method-PutFunc PutFunc   PutFunc : '+obj.message);
     }
}



//最后再加入的定时器
function setTimeLoop(){
  GenerateToken();
   // Deletes all triggers in the current project.
var triggers = ScriptApp.getProjectTriggers();
for (var i = 0; i < triggers.length; i++) {
  ScriptApp.deleteTrigger(triggers[i]);
}
    ScriptApp.newTrigger("GenerateToken")
    .timeBased()
    .everyMinutes(30)
    .create();
}

function GenerateToken(){ 
  var activeSheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  var secretKey=activeSheet.getRange("B2").getValue().toString();
  var refreshToken=activeSheet.getRange("B3").getValue().toString();
  Logger.log('method-GenerateToken sceretKey: '+secretKey);
  Logger.log('method:GenerateToken refreshToken: '+refreshToken);
  getTokenThroughAPI(secretKey,refreshToken);
}

function UpdateInsertBid(i,campaignId,jsonBody){
 var activeSheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  var bearerToken=activeSheet.getRange("B4").getValue();
  Logger.log('method-UpdateInsertBid bearerToken: '+bearerToken);
 if(bearerToken!=null&&bearerToken!=""){
     Logger.log('method-UpdateInsertBid jsonBody: '+jsonBody);
   if(jsonBody!=null&&jsonBody!=""){
         UpdateInsertBidThroughAPI(i,campaignId,jsonBody,bearerToken);
   }  
 }
}

 function DeleteBid(i,campaignId,jsonBody){
 var activeSheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  var bearerToken=activeSheet.getRange("B4").getValue();
  Logger.log('method-DeleteBid bearerToken: '+bearerToken);
 if(bearerToken!=null&&bearerToken!=""){
     Logger.log('method-DeleteBid jsonBody: '+jsonBody);
   if(jsonBody!=null&&jsonBody!=""){
       DeleteBidThroughAPI(i,campaignId,jsonBody,bearerToken);
   }  
 }
}


 function SetBudget(i,campaignId,jsonBody){
 var response
 var activeSheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  var bearerToken=activeSheet.getRange("B4").getValue();
  Logger.log('method-SetBudget bearerToken: '+bearerToken);
 if(bearerToken!=null&&bearerToken!=""){
     Logger.log('method-SetBudget jsonBody: '+jsonBody);
   if(jsonBody!=null&&jsonBody!=""){
      SetBudgetThroughAPI(i,campaignId,jsonBody,bearerToken);
   }  
 }
 }


 function findDuplicate(){
    var activeSheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
    var rawArray=[]
    //收集原始数据
   for (var row=7; row<1000; row++){
      var campaignId=activeSheet.getRange(row,3).getValue();
      var pubId=activeSheet.getRange(row,5).getValue();
      var geo=activeSheet.getRange(row,6).getValue();
     if(campaignId==""||campaignId==null){
      Logger.log('method-bidOperationRun break: ');
             break;// Stop the loop
        }else{ 
     var rowstr=campaignId+pubId+geo+"";
     rawArray.push(rowstr)
     Logger.log('method-bidOperationRun rawArray: '+rawArray);
        }
   }
   //去重操作
   if(rawArray.length!=0){
   searchKeys(rawArray)
   }
 }

  //查找重复元素
function searchKeys(arr){
    var str = "";
    var list = [];
    var haveSameDialog = false
    for (var i = 0; i < arr.length; i++) {
        var hasRead = false;
        for ( var k = 0; k < list.length; k++) {
            if (list[k] == arr[i]){
                hasRead = true;
            }
        }
        if(!hasRead){
            var _index = i, haveSame = false;
            for (var j = i + 1; j < arr.length; j++) {
                if (arr[i] == arr[j]) {
                    _index += "," + j;
                    haveSame = true;
                    haveSameDialog=true
                }
            }
            if (haveSame) {
                list.push(arr[i]);
            Logger.log('method-相同值 _index: '+_index);
                var dupRowStr=_index+""
                if(dupRowStr!=null&&dupRowStr!=""){
            Logger.log('method-相同值 dupRowStr: '+dupRowStr);
                  var dupRowArray=dupRowStr.split(",")
            Logger.log('method-相同值 dupRowArray: '+dupRowStr);
                  for(var i=0; i<dupRowArray.length; i++){
                  var dupRow=Number(dupRowArray[i]) 
            Logger.log('method-相同值 dupRow: '+dupRow);
             var activeSheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
             activeSheet.getRange(dupRow+7,1,1,7).setBackgroundRGB(183,225,205)
                  }
                }
            }
             
        }
    }
    showDuplicateDialog(haveSameDialog)
    return str
}

 function   bidOperationRun(){
   
    var activeSheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
     var activeSheetName=SpreadsheetApp.getActiveSpreadsheet().getActiveSheet().getName();
     if(!activeSheetName.includes("Bid")){
      showAlert('Update/Delete Bid ')
      return 
     }
    //  Logger.log('method-bidOperationRun activeSheet: '+activeSheet.getSheetId()+"sdfdaf::::::"+activeSheet1.getSheetId());
       for (var row=7; row<1000; row++)
      {  
        var campaignId=activeSheet.getRange(row,3).getValue();
        Logger.log('method-bidOperationRun campaignId: '+campaignId);
        if(campaignId==""||campaignId==null){
          Logger.log('method-bidOperationRun break: ');
             break;// Stop the loop
        }else
        {
        activeSheet.getRange(row,9).setBackgroundRGB(183,225,205)
        activeSheet.getRange(row,9).setValue("running")
    //获取campaignID
      var jsonarray=activeSheet.getRange(row,1,1,8).getValues();
      Logger.log('method-bidOperationRun jsonarray: '+jsonarray);
      var campaignId=jsonarray[0][2];
      var tagRun=jsonarray[0][7];
      var jsonBodyArray=[[jsonarray[0][3],jsonarray[0][4],jsonarray[0][5],jsonarray[0][6]]]
      Logger.log('method-bidOperationRun jsonBodyArray: '+jsonBodyArray)
      Logger.log('method-bidOperationRun campaignId: '+campaignId);
      Logger.log('method-bidOperationRun tagRun: '+tagRun);
      var result1 = JSON.stringify(jsonBodyArray.map(([a,b,c,d]) => ({name: a,pub_app_id:b,geo:c,rate:d})));
      var result2="{\"publisher_rates\":"+result1+"}";
      Logger.log('method-bidOperationRun jsonBody: '+result2);
      if(!(tagRun=="update"||tagRun=="delete")){
         // to do 
        var activeSheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
        activeSheet.getRange(row,9).setBackgroundRGB(255,215,0).setValue("Can NOT Identify Update or Insert with "+tagRun)
         
      }else if(tagRun=="delete"){
          DeleteBid(row,campaignId,result2)
      }else if(tagRun=="update"){
          UpdateInsertBid(row,campaignId,result2) 
      }
    }
}
}

function  budgetOperationRun(){
     var activeSheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
     var activeSheetName=SpreadsheetApp.getActiveSpreadsheet().getActiveSheet().getName();
     if(!activeSheetName.includes("Budget")){
      showAlert('Update Budget ')
      return 
     }

   for (var row=7; row<1000; row++)
      {  
        var campaignId=activeSheet.getRange(row,3).getValue();
        Logger.log('method-bidOperationRun campaignId: '+campaignId);
        if(campaignId==""||campaignId==null){
          Logger.log('method-budgetOperationRun break: ');
             break;// Stop the loop
        }else
        {
        activeSheet.getRange(row,8).setBackgroundRGB(183,225,205)
        activeSheet.getRange(row,8).setValue("running")
        //获取每一行数组
        var jsonarray=activeSheet.getRange(row,1,1,7).getValues();
        Logger.log('method-bidOperationRun jsonarray: '+jsonarray);
        var campaignId=jsonarray[0][2];
        var jsonBodyArray=[[jsonarray[0][3],jsonarray[0][4],jsonarray[0][5],jsonarray[0][6]]]
        Logger.log('method-bidOperationRun jsonBodyArray: '+jsonBodyArray)
        Logger.log('method-bidOperationRun campaignId: '+campaignId);
        var result1 = JSON.stringify(jsonBodyArray.map(([a,b,c,d]) => ({bid: a,daily:b,total:c,type:"install"})));
        var result2="{\"budget\":"+result1+"}";
      //去掉中括号，暂时想不到其他方法。
        var result2=result2.split("[").join("");
        var result2=result2.split("]").join("");
        Logger.log('method-budgetOperationRun jsonBody: '+result2);
        SetBudget(row,campaignId,result2)
      }
   
    }
}



function showAlert(sheetname) {
     var ui = SpreadsheetApp.getUi(); // Same variations.
     var result = ui.alert(
     'Opps',
     'You are not in the ' +sheetname+'sheet~',
      ui.ButtonSet.OK);
}

function printKeys(obj) {
    for(var k in obj) {
      if(k=='messages')
      {
         var tempmsg=obj.messages.toString();
         if(tempmsg.includes("campaign not found")){
            errmsg='campaign not found'
            break
         }else if(tempmsg.includes("should be")){
            errmsg='rate should be number'
            break
         }else{
           printKeys(obj[k]);
         }
      }else if(k=='message'){
            errmsg='token is invalid'
            break
      }else if(obj[k] instanceof Object) {
            if(k.includes("invalidRateEntries")){
               errmsg="rate not valid"
              break
            }else if(k.includes("Non-existing pub_app_ids")){
               errmsg="publisher_id  not found"
              break
            }else if(k.includes("invalidGeos")){
               errmsg="geo not found"
              break
            }else if(k.includes("Following entries do not exist")){
               errmsg="the entries do not exist"
              break
            }else if(k.includes("Invalid pub_app_id")){
               errmsg="publisher_id is empty "
              break
            }else{
               printKeys(obj[k]);
            }
        }  
    }
};
//  if(resstr.includes("invalidRateEntries")){
//          activeSheet.getRange(i,9).setBackgroundRGB(200,0,0).setValue("Rate is Not valid")
//         }else if(resstr.includes("Non-existing pub_app_ids")){
//          activeSheet.getRange(i,9).setBackgroundRGB(200,0,0).setValue("publisherId is NOT found")       
//         }else if(resstr.includes("invalidGeos")){
//          activeSheet.getRange(i,9).setBackgroundRGB(200,0,0).setValue("GEO is NOT found")       
//         }else{
//          activeSheet.getRange(i,9).setBackgroundRGB(200,0,0).setValue(obj.messages.toString())       
//         }



